body {
  font-family: var(--font-family-primary-normal);
  font-size: var(--font-size-400);
  font-weight: 400; // regular (normal)
  // background: url(../assets/home/background-home-desktop.jpg) center
  //   center/cover no-repeat;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  color: hsl(var(--color-primary-white));

  line-height: 1.5; // 1.4 default value
  min-height: 100vh; // Because we're not going to scrolling in this project

  display: grid;
  grid-template-rows: repeat(2, min-content);

  overflow-x: hidden;

  @include respond($bp-tablet) {
    --font-size-400: 1.6rem;
    padding: 0;
  }

  @include respond($bp-phone) {
    --font-size-400: 1.5rem;
  }
}

.main-content {
  @include respond($bp-tablet) {
    text-align: center;
  }

  &__header--numbered {
    @media only screen and (min-width: calc($bp-phone + 1px)) {
      text-align: left;
      margin: 0;
    }
    & > span {
      font-weight: bold;
      color: hsl(var(--color-primary-white) / 0.2);
      margin-right: clamp(0.7rem, 3vw, 2rem);
    }
  }

  @media only screen and (max-width: $bp-tablet) {
    &__paragraph {
      max-width: 60ch;
      margin-inline: auto;
    }
  }
}

// Select every element has an adjacent sibling before it with Lobotomized Owls
// This approach keeps the same specificity because the * selector has no specificity
// Instead of using .flow > *:not(:last-child) because the inside :not pseudo-class there is a specificity and this can make hard to change it.
// We can use the :where because the inside of it there is no specificity
// :is() The selector inside the first one has a specificity
// :where() The selector inside the first one has no specificity
// .flow > * + * {
//   margin-bottom: var(--flow-margin);
// }
